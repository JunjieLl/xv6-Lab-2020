![image-20210808035529172](Lab4.assets/image-20210808035529172.png)

1. 根据`addiw	a0,a0,3`知函数`f`和`g`参数放在寄存器`a0`中；根据`li	a2,13`知寄存器`a2`保存了`main`对`printf`调用时的`13`。

<img src="Lab4.assets/image-20210808035922807.png" alt="image-20210808035922807" style="zoom:50%;" />

<img src="Lab4.assets/image-20210808035900563.png" alt="image-20210808035900563" style="zoom:50%;" />

2. 在`main`中对`f`的调用被编译器优化了，其直接算出了结果`12`；对`g`的调用则是被编译器直接内联了，在地址`14`到`ea`之间。

![image-20210808035716235](Lab4.assets/image-20210808035716235.png)

3. 函数`printf`被定位在`0x0000000000000628`。

<img src="Lab4.assets/image-20210808040057925.png" alt="image-20210808040057925" style="zoom:50%;" />

4. 在`jalr`跳到`printf`后，应该返回到`main`中的下一条语句执行，ra保存返回地址，因此是`0x38`。

5. 输出是`He110 World`，其中57616转换为16进制为0xe110，且由于RISC-V是小端序，所以内存中为0x726c6400，每个字节转换为10进制并专程ASCII码之后得到了rld；如果RISC-V是大端序，则i=0x726c6400，而57616不需要进行修改。
6. 根据1中的回答，可知会输出寄存器`a2`的值。